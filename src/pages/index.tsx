import { type NextPage } from "next";
import Head from "next/head";
// import Link from "next/link";
import { useSession } from "next-auth/react";

import { useEffect, useState } from "react";
import Sidebar from "../Components/Sidebar";
import App from "../Components/App";
import AppStateProvider from "../state/appStateContext";

const Home: NextPage = () => {
  const [isLight, setIsLight] = useState<boolean>(true);
  const session = useSession();
  const [showSideBar, setShowSidebar] = useState(false);
  useEffect(() => {
    setIsLight(() => {
      const isLight = localStorage.getItem("theme");
      if (isLight) return Boolean(JSON.parse(isLight));
      localStorage.setItem("theme", "true");

      return true;
    });
  }, []);

  if (session.status === "unauthenticated")
    return <div className="">Login</div>;

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={`${isLight ? "" : "dark"} `}>
        <div id="modal"></div>
        <AppStateProvider>
          <div className={`flex  h-screen w-screen overflow-hidden`}>
            {showSideBar && (
              <Sidebar
                setShowSidebar={setShowSidebar}
                isLight={isLight}
                setIsLight={setIsLight}
              />
            )}
            <App showSideBar={showSideBar} setShowSidebar={setShowSidebar} />
          </div>
        </AppStateProvider>
      </div>
    </>
  );
};

export default Home;

// const AuthShowcase: React.FC = () => {
//   const { data: sessionData } = useSession();

//   const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
//     undefined, // no input
//     { enabled: sessionData?.user !== undefined }
//   );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-2xl text-center text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {secretMessage && <span> - {secretMessage}</span>}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => signOut() : () => signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// };
